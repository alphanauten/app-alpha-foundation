(function(){var e={955:function(){},459:function(){},773:function(){},956:function(){},7:function(){let{Component:e}=Shopware;e.extend("marketing-banner-create","marketing-banner-detail",{methods:{getBanner(){this.element=this.repository.create(Shopware.Context.api)},onSave(){this.isLoading=!0,this.repository.save(this.element,Shopware.Context.api).then(()=>{this.$router.push({name:"marketing.banner.detail",params:{id:this.element.id}})}).catch(e=>{this.createNotificationError({title:this.$tc("marketing-banner.detail.errorTitle"),message:e})}).finally(()=>{this.isLoading=!1})}}})},352:function(){let{Component:e,Mixin:t,Context:n}=Shopware,{Criteria:a}=Shopware.Data;e.override("sw-settings-rule-detail-assignments",{computed:{associationEntitiesConfig(){let e=this.$super("associationEntitiesConfig");return e.push({entityName:"marketing_banner",criteria:()=>{let e=new a;return e.setLimit(this.associationLimit),e.addFilter(a.equals("rules.id",this.rule.id)),e},detailRoute:"marketing.banner.detail",gridColumns:[{property:"name",label:"Name",rawData:!0,sortable:!1,routerLink:"marketing.banner.detail",allowEdit:!1}]}),e}}})},542:function(e,t,n){var a=n(955);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),n(346).Z("3f3f7173",a,!0,{})},464:function(e,t,n){var a=n(459);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),n(346).Z("3c635754",a,!0,{})},302:function(e,t,n){var a=n(773);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),n(346).Z("f94f62f2",a,!0,{})},13:function(e,t,n){var a=n(956);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),n(346).Z("7bb23afa",a,!0,{})},346:function(e,t,n){"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var r=t[i],l=r[0],o={id:e+":"+i,css:r[1],media:r[2],sourceMap:r[3]};a[l]?a[l].parts.push(o):n.push(a[l]={id:l,parts:[o]})}return n}n.d(t,{Z:function(){return h}});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},l=i&&(document.head||document.getElementsByTagName("head")[0]),o=null,s=0,c=!1,d=function(){},m=null,p="data-vue-ssr-id",u="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e,t,n,i){c=n,m=i||{};var l=a(e,t);return g(l),function(t){for(var n=[],i=0;i<l.length;i++){var o=r[l[i].id];o.refs--,n.push(o)}t?g(l=a(e,t)):l=[];for(var i=0;i<n.length;i++){var o=n[i];if(0===o.refs){for(var s=0;s<o.parts.length;s++)o.parts[s]();delete r[o.id]}}}}function g(e){for(var t=0;t<e.length;t++){var n=e[t],a=r[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(f(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{for(var l=[],i=0;i<n.parts.length;i++)l.push(f(n.parts[i]));r[n.id]={id:n.id,refs:1,parts:l}}}}function b(){var e=document.createElement("style");return e.type="text/css",l.appendChild(e),e}function f(e){var t,n,a=document.querySelector("style["+p+'~="'+e.id+'"]');if(a){if(c)return d;a.parentNode.removeChild(a)}if(u){var i=s++;t=w.bind(null,a=o||(o=b()),i,!1),n=w.bind(null,a,i,!0)}else t=y.bind(null,a=b()),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){a?(a.css!==e.css||a.media!==e.media||a.sourceMap!==e.sourceMap)&&t(e=a):n()}}var v=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function w(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=v(t,i);else{var r=document.createTextNode(i),l=e.childNodes;l[t]&&e.removeChild(l[t]),l.length?e.insertBefore(r,l[t]):e.appendChild(r)}}function y(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),m.ssrId&&e.setAttribute(p,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={id:a,exports:{}};return e[a](r,r.exports,n),r.exports}n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="bundles/alphafoundation/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/alphafoundation/"),function(){"use strict";n(302);let{Component:e,Filter:t}=Shopware,{Criteria:a}=Shopware.Data;e.register("marketing-banner-list",{template:'{% block alpha_marketing_banner_list %}\n    <sw-page class="alpha-marketing-banner-list">\n        {% block alpha_marketing_banner_list_smart_bar_actions %}\n            <template #smart-bar-actions>\n                <sw-button variant="primary" :router-link="{ name: \'marketing.banner.create\' }">\n                    {{ $tc(\'marketing-banner.list.addButtonText\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <template #content>\n            {% block alpha_marketing_banner_list_content %}\n                <sw-entity-listing\n                        v-if="banners"\n                        :items="banners"\n                        :repository="repository"\n                        :show-selection="false"\n                        :allow-inline-edit="false"\n                        :columns="columns"\n                        detail-route="marketing.banner.detail">\n                    {% block alpha_marketing_banner_list_grid_columns_valid_from %}\n                        <template #column-validFrom="{ item }">\n                            {{ dateFilter(item.validFrom, { hour: undefined, minute: undefined }) }}\n                        </template>\n                    {% endblock %}\n\n                    {% block alpha_marketing_banner_list_list_grid_columns_valid_until %}\n                        <template #column-validUntil="{ item }">\n                            {{ dateFilter(item.validUntil, { hour: undefined, minute: undefined }) }}\n                        </template>\n                    {% endblock %}\n                </sw-entity-listing>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{repository:null,banners:null}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return this.getColumns()},dateFilter(){return t.getByName("date")}},created(){this.createdComponent()},methods:{createdComponent(){this.repository=this.repositoryFactory.create("marketing_banner"),this.repository.search(new a,Shopware.Context.api).then(e=>{this.banners=e})},getColumns(){return[{property:"active",label:this.$tc("marketing-banner.list.columns.active"),inlineEdit:"boolean",allowResize:!0},{property:"name",label:this.$tc("marketing-banner.list.columns.name"),routerLink:"marketing.banner.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"description",label:this.$tc("marketing-banner.list.columns.description"),inlineEdit:"string",allowResize:!0},{property:"validFrom",label:this.$tc("marketing-banner.list.columns.validFrom"),inlineEdit:"date",allowResize:!0},{property:"validUntil",label:this.$tc("marketing-banner.list.columns.validUntil"),inlineEdit:"date",allowResize:!0}]}}}),n(464);let{Component:i,Mixin:r,Context:l}=Shopware,{mapPropertyErrors:o}=Shopware.Component.getComponentHelper(),{Criteria:s,EntityCollection:c}=Shopware.Data;i.register("marketing-banner-detail",{template:'{% block alpha_marketing_banner_detail %}\n    <sw-page class="alpha-marketing-banner-detail">\n        <template #smart-bar-actions>\n            <sw-button-group>\n                <sw-button variant="ghost" @click="onCancel">\n                    {{ $tc(\'marketing-banner.detail.cancelButtonText\') }}\n                </sw-button>\n                <sw-button\n                    :is-loading="isLoading"\n                    v-if="element"\n                    @click="onSave"\n                    variant="primary">\n                    {{ $tc(\'marketing-banner.detail.saveButtonText\') }}\n                </sw-button>\n            </sw-button-group>\n        </template>\n\n        <template #content>\n            <sw-card-view>\n                <sw-card position-identifier="marketing-banner-detail-name" v-if="element"\n                         :is-loading="isLoading" :large="false" :hero="false">\n                    <sw-text-field v-model:value="element.name"\n                                   name="marketingBannerName"\n                                   :label="$tc(\'marketing-banner.detail.nameLabel\')"\n                                   :error="bannerNameError"\n                                   required\n                                   validation="required"></sw-text-field>\n                    <sw-text-field v-model:value="element.description"\n                                   :label="$tc(\'marketing-banner.detail.descriptionLabel\')"\n                                   name="marketingBannerDescription"></sw-text-field>\n                    <sw-checkbox-field v-model:value="element.active"\n                                       :label="$tc(\'marketing-banner.detail.activeLabel\')"\n                                       name="marketingBannerActive"></sw-checkbox-field>\n                </sw-card>\n\n                <sw-card position-identifier="marketing-banner-detail-type" v-if="element" :large="false" :hero="false">\n                    <sw-single-select v-model:value="element.bannerType"\n                                      :label="$tc(\'marketing-banner.detail.bannerTypeLabel\')"\n                                      :options="bannerTypeSelect"\n                                      :error="bannerTypeError"\n                                      required>\n                    </sw-single-select>\n\n                    <sw-category-tree-field :label="$tc(\'marketing-banner.detail.categoriesLabel\')"\n                                            :categories-collection="categoriesCollection"\n                                            :category-criteria="categoryCriteria"\n                                            @selection-add="onSelectionAdd"\n                                            @selection-remove="onSelectionRemove"/>\n                </sw-card>\n\n                <sw-card position-identifier="marketing-banner-detail-content" v-if="element">\n                    <sw-text-editor v-model:value="element.text"\n                                    :label="$tc(\'marketing-banner.detail.contentText\')"\n                    />\n\n                    <sw-media-field v-model:value="element.mediaId"\n                                    :label="$tc(\'marketing-banner.detail.contentImage\')"></sw-media-field>\n\n                    <sw-colorpicker v-model:value="element.backgroundColor"\n                                    :label="$tc(\'marketing-banner.detail.backgroundColor\')"\n                                    name="marketingBannerBackgroundColor"\n                                    color-output="hex"></sw-colorpicker>\n\n                    <sw-colorpicker v-model:value="element.textColor" :label="$tc(\'marketing-banner.detail.textColor\')"\n                                    name="marketingBannerTextColor"\n                                    color-output="hex"></sw-colorpicker>\n\n                    <sw-text-field v-model:value="element.border"\n                                   :label="$tc(\'marketing-banner.detail.border\')"\n                                   name="marketingBannerBorder"></sw-text-field>\n                    <sw-code-editor\n                        :label="$tc(\'marketing-banner.detail.css\')"\n                        ref="cssEditor"\n                        name="css"\n                        identifier="value"\n                        completionMode="entity"\n                        :editorConfig="editorConfigSass"\n                        v-model:value="element.css">\n                    </sw-code-editor>\n                </sw-card>\n\n                <sw-card v-if="element && !element._isNew" position-identifier="marketing-banner-detail-slot" :is-loading="isLoading">\n                    <sw-cms-slot\n                        :key="element.id"\n                        :element="element"\n                        :disabled="false"\n                        :active="!isLoading"\n                    />\n                </sw-card>\n\n                <sw-card position-identifier="marketing-banner-detail-rules">\n                    <alpha-rule-select\n                        v-if="element"\n                        :label="$tc(\'marketing-banner.detail.bannerRules\')"\n                        :criteria="ruleFilter"\n                        v-model:collection="element.rules"\n                        :rule-scope="[\'global\', \'cart\', \'checkout\', \'lineItem\']"\n                        :disabled="isRuleSelectDisabled">\n                    </alpha-rule-select>\n                </sw-card>\n\n                <sw-card position-identifier="marketing-banner-detail-dates">\n                    <sw-datepicker date-type="datetime-local"\n                                   v-if="element"\n                                   :label="$tc(\'marketing-banner.detail.labelValidFrom\')"\n                                   v-model:value="element.validFrom">\n                    </sw-datepicker>\n                    <sw-datepicker date-type="datetime-local"\n                                   v-if="element"\n                                   :label="$tc(\'marketing-banner.detail.labelValidUntil\')"\n                                   v-model:value="element.validUntil">\n                    </sw-datepicker>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","cmsDataResolverService"],mixins:[r.getByName("notification"),r.getByName("cms-element")],metaInfo(){return{title:this.$createTitle()}},data(){return{repository:null,element:null,isLoading:!1,isSaveSuccessful:!1,categoriesCollection:null}},computed:{...o("banner",["name","bannerType"]),bannerTypeSelect(){return[{label:this.$tc("marketing-banner.detail.bannerTypeCategory"),value:"category"},{label:this.$tc("marketing-banner.detail.bannerTypeProduct"),value:"product"}]},bannerRepository(){return this.repositoryFactory.create("marketing_banner")},categoryRepository(){return this.repositoryFactory.create("category")},categoryCriteria(){return new s},ruleFilter(){let e=new s;return e.setLimit(null),e},isRuleSelectDisabled(){return!1}},created(){this.createdComponent()},methods:{async createdComponent(){this.isLoading=!0,this.repository=this.repositoryFactory.create("marketing_banner"),this.categoriesCollection=new c("/category","category",Shopware.Context.api),await this.getBanner(),await this.loadCategories(),this.element.type&&this.cmsDataResolverService.resolve({sections:[{blocks:[{slots:[this.element]}]}]}).then(()=>{this.initElementConfig(this.element.type),this.initElementData(this.element.type)}).catch(e=>{this.createNotificationError({title:e.message,message:e.response})}),this.isLoading=!1},async getBanner(){this.element=await this.repository.get(this.$route.params.id,l.api)},async loadCategories(){let e=new s(1,100),t=this.element.categories?this.element.categories:[];if(!(t.length<1))return e.setIds(t),await this.categoryRepository.search(e,Object.assign({},Shopware.Context.api,{inheritance:!0})).then(e=>{this.categoriesCollection=e})},onSelectionAdd(e){this.element.categories||this.$set(this.element,"categories",[]),this.element.categories.push(e.id)},onSelectionRemove(e){this.element.categories||this.$set(this.element,"categories",[]);let t=this.element.categories.indexOf(e.id);-1!==t&&this.element.categories.splice(t,1)},onCancel(){this.$router.push({name:"marketing.banner.index"})},onSave(){this.isSaveSuccessful=!1,this.isLoading=!0,this.repository.save(this.element,l.api).then(()=>{this.getBanner(),this.isSaveSuccessful=!0}).catch(e=>{this.createNotificationError({title:this.$tc("marketing-banner.detail.notification.error"),message:this.$tc("marketing-banner.detail.notification.errorMessage")})}).finally(()=>this.isLoading=!1)},onChangeLanguage(){this.getItem()}}}),n(7),n(542);let{Component:d}=Shopware;d.register("alpha-rule-select",{template:'{% block alpha_rule_select %}\r\n    <div class="alpha-rule-select">\r\n        {% block a %}\r\n            <sw-entity-many-to-many-select\r\n                    v-bind="$attrs"\r\n                    ref="ruleSelect"\r\n                    class="alpha-rule-select"\r\n                    :entity-collection="collection ? collection : []"\r\n                    :local-mode="localMode"\r\n                    v-on="$listeners"\r\n                    @update:entityCollection="onChange">\r\n\r\n                <template #before-item-list>\r\n                    <li class="sw-select-result sw-banner-rule-select__add-new-rule"\r\n                        @click="showRuleModal = true">\r\n                        {{ $tc(\'marketing-banner.detail.labelAddNewRule\') }}\r\n                    </li>\r\n                </template>\r\n            </sw-entity-many-to-many-select>\r\n        {% endblock %}\r\n\r\n        {% block b %}\r\n            <sw-rule-modal\r\n                    v-if="showRuleModal"\r\n                    @save="onSaveRule"\r\n                    @modal-close="showRuleModal = false"\r\n                    :allowed-rule-scopes="ruleScope">\r\n            </sw-rule-modal>\r\n        {% endblock %}\r\n    </div>\r\n{% endblock %}\r\n',model:{prop:"collection",event:"collection-added-item"},inject:["repositoryFactory"],props:{collection:{type:Array,required:!1,default:null},ruleScope:{type:Array,required:!1,default:null}},data(){return{showRuleModal:!1}},methods:{onChange(e){this.$emit("update:collection",e)},onSaveRule(e){let t=this.repositoryFactory.create(this.collection.entity,this.collection.source);t.assign(e,this.collection.context).then(()=>{t.search(this.collection.criteria,this.collection.context).then(e=>{this.$emit("collection-added-item",e),this.$refs.ruleSelect.sendSearchRequest()})})}}}),n(352);let{Module:m}=Shopware;m.register("marketing-banner",{type:"plugin",name:"marketing-banner",title:"marketing-banner.general.mainMenuItemGeneral",description:"marketing-banner.general.descriptionTextModule",routes:{index:{component:"marketing-banner-list",path:"index"},detail:{component:"marketing-banner-detail",path:"detail/:id?",meta:{parentPath:"marketing.banner.index"}},create:{component:"marketing-banner-create",path:"create",meta:{parentPath:"marketing.banner.index"}}},navigation:[{label:"marketing-banner.general.mainMenuItemGeneral",parent:"sw-marketing",path:"marketing.banner.index",position:100}]}),n(13);let{Component:p,Mixin:u}=Shopware,h=Shopware.Data.Criteria;p.register("sw-cms-el-alpha-replacer",{template:'<div class="sw-cms-el-alpha-replacer" :style="elementCss">\r\n    <div>\r\n        <p class="alpha-replacer-title">\r\n            <sw-icon name="regular-repeat" size="24"/>\r\n            {{ $tc(\'sw-cms.elements.alpha-replacer.title\') }}\r\n        </p>\r\n\r\n        <p>{{ $tc(\'sw-cms.elements.alpha-replacer.description\') }}</p>\r\n    </div>\r\n\r\n    <div>\r\n        <sw-entity-single-select\r\n                :criteria="cmsElementConfigCriteria"\r\n                entity="alpha_cms_element_config"\r\n                v-model:value="cmsElementConfigId">\r\n            <template #result-item="{ item, index }">\r\n                <slot name="result-item" v-bind="{ item, index }">\r\n                    <li is="sw-select-result" v-bind="{ item, index }">\r\n                        {{ item.type }} | {{ item.name }}\r\n                    </li>\r\n                </slot>\r\n            </template>\r\n        </sw-entity-single-select>\r\n    </div>\r\n\r\n    <div>\r\n        <sw-button :disabled="!cmsElementConfigId"\r\n                   @click="onLoadCmsElementConfig">\r\n            <sw-icon name="regular-checkmark" size="16"/>\r\n        </sw-button>\r\n    </div>\r\n</div>\r\n',mixins:[u.getByName("cms-element")],inject:["repositoryFactory"],data(){return{cmsElementConfigId:null}},computed:{cmsElementConfigRepository(){return this.repositoryFactory.create("alpha_cms_element_config")},cmsElementConfigCriteria(){return new h},mediaUrl(){let e=Shopware.Context.api;return`${e.assetsPath}/administration/static/img/cms/preview_mountain_large.jpg`},elementCss(){return{"background-image":'url("'+this.mediaUrl+'")'}}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("alpha-replacer")},onLoadCmsElementConfig(){this.cmsElementConfigRepository.get(this.cmsElementConfigId,Shopware.Context.api,this.cmsElementConfigCriteria).then(e=>{this.element.config=e.config,this.element.data=e.data,this.element.type=e.type,this.$emit("element-update",this.element)})}}}),Shopware.Application.getContainer("service").cmsService.registerCmsElement({plugin:"AlphaFoundation",icon:"regular-repeat",name:"alpha-replacer",label:"sw-cms.elements.alpha-replacer.title",component:"sw-cms-el-alpha-replacer",previewComponent:!0,defaultConfig:null}),Shopware.Component.override("sw-order-detail-details",{template:'{% block sw_order_detail_details_payment_method_select %}\n    <sw-entity-single-select\n        v-model:value="transaction.paymentMethodId"\n        entity="payment_method"\n        label-property="distinguishableName"\n        :criteria="paymentMethodCriteria"\n        :label="$tc(\'sw-order.createBase.detailsFooter.labelPaymentMethod\')"\n        :placeholder="$tc(\'sw-order.createBase.detailsFooter.placeholderPaymentMethod\')"\n        show-clearable-button\n        :disabled="disableChangePayment"\n    />\n{% endblock %}\n\n{% block sw_order_detail_details_shipping_method_select %}\n    <sw-entity-single-select\n        v-model:value="delivery.shippingMethodId"\n        entity="shipping_method"\n        :criteria="salesChannelCriteria"\n        :label="$tc(\'sw-order.createBase.detailsFooter.labelShippingMethod\')"\n        :placeholder="$tc(\'sw-order.createBase.detailsFooter.placeholderShippingMethod\')"\n        show-clearable-button\n        :disabled="disableChangeShipping"\n    />\n{% endblock %}',computed:{disableChangePayment(){if("open"!==this.transaction.stateMachineState.technicalName)return!0},disableChangeShipping(){if("open"!==this.order.deliveries.first().stateMachineState.technicalName)return!0}}})}()})();